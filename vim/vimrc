" Use Vim settings, rather than Vi settings
set nocompatible




" Setup

" Let's us Pathogen
execute pathogen#infect()

" Use UTF-8 by default
set encoding=utf-8
set fileencoding=utf-8

" Automatically re-read ﬁles if unmodiﬁed inside Vim.
set autoread

" Display a conﬁrmation dialog when closing an unsaved ﬁle.
set confirm

" Ignore ﬁle’s mode lines; use vimrc conﬁgurations instead.
set nomodeline

" Maintain undo history between sessions
set undofile
" Save undo file here
set undodir=~/.vim/undodir

" Record swapfiles there
set directory=$HOME/.vim/swp

" Do not use backup
set nobackup

" enable project speficific vimrc
set exrc





" Syntax highlight

" Enable syntax highlghting
syntax enable
colorscheme nova

" Set airline theme
let g:airline_theme='solarized'

"Show matching penrens, brackets, etc.
set showmatch

" Comments and attributes in italic
highlight Comment cterm=italic
highlight Comment gui=italic
highlight htmlArg cterm=italic
highlight htmlArg gui=italic





" Text management

" New lines inherit the indentation of previous lines.
set autoindent

" Smart auto indentation (instead of old smartindent option).
filetype plugin indent on
" 4 spaces please
" On pressing tab, insert 4 spaces.
set expandtab
" When indenting with ‘>’, use 4 spaces width.
set shiftwidth=4
" Show existing tab with 4 spaces width.
set tabstop=4
set softtabstop=4

" When shifting, indent using two spaces.
set shiftwidth=2

" Round indent to the nearest multiple of 4
set shiftround

" No line-wrapping
set nowrap

" Spell-check always on
set spell

" Interpret numbers with leading zero as decimal, not octal
set nrformats-=octal





" Buffer management

" Open splits to the right or below; more natural than the default
set splitright
set splitbelow

" Show file options above the command line
set wildmenu

" Don’t offer to open certain files/directories
set wildignore+=*.bmp,*.gif,*.ico,*.jpg,*.png,*.ico
set wildignore+=*.pdf,*.psd
set wildignore+=*.map,*.min.css
set wildignore+=node_modules/*,bower_components/*

" Manage multiple buffers effectively: the current buffer can be “sent” to the
" background without writing to disk. When a background buffer becomes current
" again, marks and undo-history are remembered.
set hidden





" Interactions

" Start scrolling slightly before the cursor reaches an edge
set scrolloff=3
set sidescrolloff=5

" Scroll sideways a character at a time, rather than a screen at a time
set sidescroll=1

" Allow motions and back-spacing over line-endings etc.
set backspace=indent,eol,start
set whichwrap=h,l,b,<,>,~,[,]

" Don’t redraw the screen unless we need to
set lazyredraw

" Write swapfiles to disk a little sooner
set updatetime=250

" Set bigger history of executed commands
set history=1000

" Enable mouse for scrolling and resizing.
set mouse=a

" enable folding
set foldenable
" Open most of the folds by default If set to 0, all folds will be closed.
set  foldlevelstart=10
"Folds can be nested. Setting a max value protects you from too many folds.
set  foldnestmax=10
" Defines the type of folding.
set  foldmethod=manual




" Visual decoration

" Show status line
set laststatus=2

" Show commands you're typing
set showcmd

" Show current line and column position in file
set ruler

" Customise our current location information
set statusline=%f\ %=Line\ %l/%L\ Col\ %c\ (%p%%)

" Show file title in terminal tab
set title

" Maximum number of tab pages that can be opened from the command line.
set tabpagemax=40

" Show invisible
set list
set listchars=tab:»-,trail:·

"Set relative line number
set relativenumber

" ...but absolute numbers on the current line (hybrid numbering)r
set number

" Force cursor onto a new line after 80 characters
set textwidth=80

" However, in Git commit messages, let’s make it 72 characters
autocmd FileType gitcommit set textwidth=72

" Colour the column just after our line limit so that we don’t type over it
set colorcolumn=+1

" In Git commit messages, also colour the 51st column (for titles)
autocmd FileType gitcommit set colorcolumn+=51

" Highlight current line
set cursorline

" Don't let indentLine plugin disable quotes in json files
" https://github.com/Yggdroot/indentLine/issues/172
let g:vim_json_syntax_conceal = 0

" Disable beep on errors.
set noerrorbells
" Flash the screen instead of beeping on errors.
set visualbell





" Search

" Highlight searches by default.
set hlsearch

" ...just highlight as we type
set incsearch

" Ignore case when searching...
set ignorecase

" ...except if we input a capital letter
set smartcase





" Customize commands

" Allow to remove not empty directory when exploring
let g:netrw_localrmdir="rm -r"

let g:EditorConfig_exclude_patterns = ['fugitive://.*']



" Set relevant filetypes

autocmd BufRead, BufNewFile *.md set filetype=markdown
"autocmd BufRead, BufNewFile *.hbs set filetype=html
autocmd BufRead, BufNewFile *.html,*.htm,*.shtml,*.stm set filetype=jinja

" Use Sass syntax for `.css` files because PostCSS !
augroup filetypedetect
    au BufRead,BufNewFile *.css set filetype=sass
augroup END






" Abbreviations

iabbrev lipsum Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo.

" CSS section title
iabbrev /*= /*<Space>==========================================================================<Esc>o<Space><Space><Space>#<Esc>o<Esc>0i<Space><Space><Space>==========================================================================<Space>*/<Esc>kA
iabbrev /*- /*<Space>-------------------------------------<Esc>o<Space><Space><Space>#<Esc>o<Esc>0i<Space><Space><Space>-------------------------------------<Space>*/<Esc>kA

" inline comm
iabbrev /*1 /* [1] */
iabbrev /*2 /* [2] */
iabbrev /*3 /* [3] */
iabbrev /*4 /* [4] */
iabbrev /*5 /* [5] */

" Docblock
iabbrev /** /**<Return><Space>*<Return>*/<Esc>k$a

" Date & time
iab <expr> usdate strftime("%Y-%m-%d")
iab <expr> uusdate strftime("%Y-%m-%d %H:%M:%S")

" `%%` is the directory of the current file
cabbr <expr> %% fnameescape(expand('%:p:h'))





"Key mappings

" Disable arrow keys (hardcore)
map  <Up>    <Nop>
imap <Up>    <Nop>
map  <Down>  <Nop>
imap <Down>  <Nop>
nnoremap <Up> :echoe "Use k"<CR>
nnoremap <Down> :echoe "Use j"<CR>
nnoremap <Left> :echoe "Use h"<CR>
nnoremap <Right> :echoe "Use l"<CR>

map  <Left>  <Nop>
imap <Left>  <Nop>
map  <Right> <Nop>
imap <Right> <Nop>
" `gf` opens file under cursor in a new vertical split
nnoremap gf :vertical wincmd f<CR>

" Switch between previous and next  buffers using `Ctrl-j` and `Ctrl-k`
"map <C-K> :bprev<CR>
"map <C-J> :bnext<CR>

" Switching windows using `Ctrl-h`, `Ctrl-j`, `Ctrl-k` and `Ctrl-l`
nnoremap <C-H> <C-W><C-H>
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>

" Move visual selection
" Select visualy some lines `V` and move them using `J` and `K`
vnoremap J :m '>+1<CR>gv=gv
vnoremap K :m '<-2<CR>gv=gv

" Make `jj` and `jk` throw you into normal mode
inoremap jj <esc>
inoremap jk <esc>
